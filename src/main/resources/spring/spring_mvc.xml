<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 本配置文件 mvc-dispatcher的DispatcherServlet使用， 提供其相关的Spring MVC配置-->
	<context:annotation-config />   
	
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	  <property name="messageConverters">
	   <list>
	    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
	    	<property name="supportedMediaTypes" value="application/json;charset=UTF-8">  	</property>
	    </bean>
	   </list>
	  </property>
 	</bean>
 	
	<!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
	<!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
     <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	   	<!-- 控制最大的文件大小 -->
	   	<property name="maxUploadSize" value="62914560"></property>
    </bean>  
    
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">WEB-INF/error_fileupload</prop>  
                <!-- 处理其它异常(包括Controller抛出的) -->  
                <!-- <prop key="java.lang.Throwable">WEB-INF/500</prop>  --> 
            </props>  
        </property>  
    </bean>  
    
     <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path=""/>
    		<bean class="haust.vk.interceptor.GlobalErrorInfoExceptionInterceptor"></bean>
    	</mvc:interceptor>
    	
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		<mvc:exclude-mapping path="/*"/>
    		<mvc:exclude-mapping path="/extra/**"/>
    		<mvc:exclude-mapping path="/file/**"/>
    		<bean class="haust.vk.interceptor.JsonFormatInterceptor"></bean>
    	</mvc:interceptor>
    	
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		<mvc:exclude-mapping path="/*"/>
    		<mvc:exclude-mapping path="/select/**"/>
    		<mvc:exclude-mapping path="/user/register"/>
    		<mvc:exclude-mapping path="/extra/**"/>
    		<mvc:exclude-mapping path="/file/**"/>
    		<bean class="haust.vk.interceptor.TokenidIntercepter"></bean>
    	</mvc:interceptor>
    </mvc:interceptors> 
    
  <!--  <mvc:cors>
   		<mvc:mapping path="/**"
        allowed-origins="*"
        allowed-methods="GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH"
        allowed-headers="Access-Control-Request-Headers, Access-Control-Request-Method,Access-Control-Allow-Origin"
        exposed-headers="" 
        allow-credentials="false"
        max-age="123" />

   </mvc:cors> -->
    <!-- 由于web.xml中设置是：由SpringMVC拦截所有请求,经过下列配置，进行静态文件的映射 -->  
    <!-- <mvc:resources mapping="/jslayer/*.js" location="/static/js/jslayer/" cache-period="5000"/>   -->
</beans>


