<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="haust.vk.dao.ArticleDao" >
	<insert id="insertArticleabstract" parameterType="haust.vk.entity.Articleabstract">
		insert into articleabstract(article_id,article_title,article_show_img,classify_id,abstract_content,user_id,article_attachment) 
				values(#{article_id},#{article_title},#{article_show_img},#{classify_id},#{abstract_content},#{user_id},#{article_attachment})
	</insert>
	
	<insert id="insertArticlecontent" parameterType="java.util.Map">
		insert into articlecontent(article_id,article_content) values(#{article_id},#{article_content})
	</insert>
	
	<insert id="insertArticletag" parameterType="haust.vk.entity.Articletag">
		insert into articletag(article_id,user_id,tag_content) values(#{article_id},#{user_id},#{tag_content})
	</insert>
	
	<delete id="deleteArticleabstract" parameterType="string">
		delete from articleabstract where article_id = #{article_id}
	</delete>
	
	<delete id="deleteArticlecontent" parameterType="string">
		delete from articlecontent where article_id = #{article_id}
	</delete>
	
	 <delete id="deleteArticletag" parameterType="string">
		delete from articletag where article_id = #{article_id}
	</delete>
	
	<update id="updateArticletag" parameterType="haust.vk.entity.Articletag">
		update articletag set tag_content=#{tag_content} where article_id = #{article_id}
	</update>
	
	<update id="updateArticleClassify" parameterType="java.util.Map">
		update articleabstract set classify_id=#{classify_id_new} where classify_id = #{classify_id_old}
	</update>
	
	<update id="updateArticleabstract" parameterType="haust.vk.entity.Articleabstract">
		update 
			articleabstract 
		set 
			article_title=#{article_title},article_show_img=#{article_show_img},
			classify_id=#{classify_id},abstract_content=#{abstract_content},
			article_update_time=#{article_update_time}
		where 
			article_id = #{article_id}
	</update>
	
	<update id="updateArticleabstractAtta" parameterType="java.util.Map">
		update articleabstract set article_attachment = #{article_attachment} where article_id = #{article_id}
	</update>
	
	<update id="updateArticlecontent" parameterType="java.util.Map">
		update articlecontent set article_content = #{article_content} where article_id = #{article_id}
	</update>
	
	<update id="updateOneNum" parameterType="java.util.Map">
		update articleabstract set 
			<if test=" comment_num != null "> comment_num = #{comment_num}</if>
			<if test=" collect_num != null "> collect_num = #{collect_num}</if>
			<if test=" praise_num != null "> praise_num = #{praise_num}</if>
			where
				article_id = #{article_id}
	</update>
	
	<select id="selectArticleLikeTitle" parameterType="string" resultType="java.util.Map">
		select 
			article_id,article_title,article_update_time 
		from 
			articleabstract
		where
			article_title LIKE %#{article_title}%
		LIMIT
			#{START},#{PAGESIZE}
	</select>
	
	<select id="selectArticleListByPerson" parameterType="java.util.Map" resultType="haust.vk.entity.Articleabstract">
		select * from articleabstract where user_id = (Select user_id from userinfo where user_path = #{user_path}) ORDER BY -article_id ASC LIMIT #{start},#{pagesize}
	</select>
	
	<select id="selectArticleAbstract" parameterType="string" resultType="java.util.Map">
		select * from articleabstract where articleabstract.article_id = #{articleid}
	</select>
	
	<select id="selectArticleAbstractByUserid" parameterType="string" resultType="java.util.Map">
		select * from articleabstract where articleabstract.user_id = #{user_id}
	</select>
	
	<select id="selectArticleContent" parameterType="string" resultType="string">
		select articlecontent.article_content from articlecontent where articlecontent.article_id = #{articleid}
	</select>
	
	<select id="selectArticleTag" parameterType="string" resultType="string">
		 select articletag.tag_content from articletag where articletag.article_id = #{articleid}
	</select>
	
	<select id="selectArticleClassify" parameterType="string" resultType="string">
		select articleclassify.classify_content from articleclassify where articleclassify.classify_id = #{classify_id}
	</select>
	
	<select id="selectArticleByClassifyid" parameterType="java.util.Map" resultType="java.util.Map">
		select * from articleabstract where classify_id = #{classify_id} ORDER BY -article_id ASC LIMIT #{start},#{pagesize}
	</select>
	
	<select id="selectArticleBySearch" parameterType="java.util.Map" resultType="java.util.Map">
		select * from articleabstract where article_title like '%${keywords}%' OR abstract_content like '%#{keywords}%' order by -article_id ASC LIMIT #{start},#{pagesize}
	</select>
	
	<select id="selectArticleByListUserid" parameterType="java.util.Map" resultType="selectArticleByListUserid">
		select * from articleabstract where user_id in 
			<foreach collection="followuserlist" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			<if test=" keywords != null">
				and article_title like '%${keywords}%' and article_abstract like '%${keywords}%' 
			</if>
			ORDER BY -article_id ASC LIMIT #{start},#{pagesize}
	</select>
</mapper>